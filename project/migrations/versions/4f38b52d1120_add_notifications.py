"""Add notifications

Revision ID: 4f38b52d1120
Revises: 8413299074f8
Create Date: 2025-04-27 19:04:45.013237

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '4f38b52d1120'
down_revision = '8413299074f8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False, comment='Primary key'),
    sa.Column('receiver_id', sa.String(length=36), nullable=False, comment='ID of the user profile receiving the notification'),
    sa.Column('sender_id', sa.String(length=36), nullable=True, comment='ID of the user profile sending the notification'),
    sa.Column('type', sa.String(length=50), nullable=False, comment='Type of the notification'),
    sa.Column('content', sa.String(length=100), nullable=True, comment='Content of the notification message'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Timestamp of the notification creation'),
    sa.Column('seen', sa.Boolean(), nullable=False, comment='Whether the receiver has seen the notification'),
    sa.Column('url', sa.String(length=255), nullable=True, comment='URL to redirect when the notification is clicked'),
    sa.ForeignKeyConstraint(['receiver_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=mysql.VARCHAR(length=36),
               comment='Primary key',
               existing_nullable=False)
        batch_op.alter_column('alt_id',
               existing_type=mysql.VARCHAR(length=36),
               comment='Alternative primary key used by Flask-Login',
               existing_nullable=False)
        batch_op.alter_column('code',
               existing_type=mysql.VARCHAR(length=12),
               comment='Unique code for identifying users',
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment='Foreign key to the user table',
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=25),
               comment='Username for identifying users',
               existing_nullable=False)
        batch_op.alter_column('pwd',
               existing_type=mysql.VARCHAR(length=250),
               comment='Password for logging-in users',
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=mysql.VARCHAR(length=20),
               comment='Role of the user',
               existing_nullable=False)
        batch_op.alter_column('visibility',
               existing_type=mysql.VARCHAR(length=20),
               comment='Visibility of the profile',
               existing_nullable=False)
        batch_op.alter_column('profile_pic',
               existing_type=mysql.VARCHAR(length=250),
               comment='Profile picture of the user',
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.alter_column('profile_pic',
               existing_type=mysql.VARCHAR(length=250),
               comment=None,
               existing_comment='Profile picture of the user',
               existing_nullable=False)
        batch_op.alter_column('visibility',
               existing_type=mysql.VARCHAR(length=20),
               comment=None,
               existing_comment='Visibility of the profile',
               existing_nullable=False)
        batch_op.alter_column('role',
               existing_type=mysql.VARCHAR(length=20),
               comment=None,
               existing_comment='Role of the user',
               existing_nullable=False)
        batch_op.alter_column('pwd',
               existing_type=mysql.VARCHAR(length=250),
               comment=None,
               existing_comment='Password for logging-in users',
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=25),
               comment=None,
               existing_comment='Username for identifying users',
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='Foreign key to the user table',
               existing_nullable=False)
        batch_op.alter_column('code',
               existing_type=mysql.VARCHAR(length=12),
               comment=None,
               existing_comment='Unique code for identifying users',
               existing_nullable=False)
        batch_op.alter_column('alt_id',
               existing_type=mysql.VARCHAR(length=36),
               comment=None,
               existing_comment='Alternative primary key used by Flask-Login',
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=mysql.VARCHAR(length=36),
               comment=None,
               existing_comment='Primary key',
               existing_nullable=False)

    op.drop_table('notifications')
    # ### end Alembic commands ###
